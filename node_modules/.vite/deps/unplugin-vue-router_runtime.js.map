{
  "version": 3,
  "sources": ["../../unplugin-vue-router/dist/runtime.js"],
  "sourcesContent": ["// src/data-loaders/createDataLoader.ts\r\nvar toLazyValue = (lazy, to, from) => typeof lazy === \"function\" ? lazy(to, from) : lazy;\r\n\r\n// src/data-loaders/navigation-guard.ts\r\nimport { isNavigationFailure } from \"vue-router\";\r\nimport { effectScope } from \"vue\";\r\n\r\n// src/data-loaders/symbols.ts\r\nvar LOADER_SET_KEY = Symbol(\"loaders\");\r\nvar LOADER_ENTRIES_KEY = Symbol(\"loaderEntries\");\r\nvar IS_USE_DATA_LOADER_KEY = Symbol();\r\nvar PENDING_LOCATION_KEY = Symbol();\r\nvar STAGED_NO_VALUE = Symbol();\r\nvar APP_KEY = Symbol();\r\nvar ABORT_CONTROLLER_KEY = Symbol();\r\nvar NAVIGATION_RESULTS_KEY = Symbol();\r\nvar IS_SSR_KEY = Symbol();\r\n\r\n// src/data-loaders/utils.ts\r\nfunction isDataLoader(loader) {\r\n  return loader && loader[IS_USE_DATA_LOADER_KEY];\r\n}\r\nvar currentContext;\r\nfunction getCurrentContext() {\r\n  return currentContext || [];\r\n}\r\nfunction setCurrentContext(context) {\r\n  currentContext = context ? context.length ? context : null : null;\r\n}\r\nfunction withLoaderContext(promise) {\r\n  const context = currentContext;\r\n  return promise.finally(() => currentContext = context);\r\n}\r\nvar assign = Object.assign;\r\nfunction trackRoute(route) {\r\n  const [params, paramReads] = trackObjectReads(route.params);\r\n  const [query, queryReads] = trackObjectReads(route.query);\r\n  let hash = { v: null };\r\n  return [\r\n    {\r\n      ...route,\r\n      // track the hash\r\n      get hash() {\r\n        return hash.v = route.hash;\r\n      },\r\n      params,\r\n      query\r\n    },\r\n    paramReads,\r\n    queryReads,\r\n    hash\r\n  ];\r\n}\r\nfunction trackObjectReads(obj) {\r\n  const reads = {};\r\n  return [\r\n    new Proxy(obj, {\r\n      get(target, p, receiver) {\r\n        const value = Reflect.get(target, p, receiver);\r\n        reads[p] = value;\r\n        return value;\r\n      }\r\n    }),\r\n    reads\r\n  ];\r\n}\r\nfunction isSubsetOf(inner, outer) {\r\n  for (const key in inner) {\r\n    const innerValue = inner[key];\r\n    const outerValue = outer[key];\r\n    if (typeof innerValue === \"string\") {\r\n      if (innerValue !== outerValue) return false;\r\n    } else if (!innerValue || !outerValue) {\r\n      if (innerValue !== outerValue) return false;\r\n    } else {\r\n      if (!Array.isArray(outerValue) || outerValue.length !== innerValue.length || innerValue.some((value, i) => value !== outerValue[i]))\r\n        return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// src/data-loaders/navigation-guard.ts\r\nfunction setupLoaderGuard({\r\n  router,\r\n  app,\r\n  effect,\r\n  isSSR,\r\n  errors: globalErrors = [],\r\n  selectNavigationResult = (results) => results[0].value\r\n}) {\r\n  if (router[LOADER_ENTRIES_KEY] != null) {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      console.warn(\r\n        \"[vue-router]: Data Loader was setup twice. Make sure to setup only once.\"\r\n      );\r\n    }\r\n    return () => {\r\n    };\r\n  }\r\n  if (process.env.NODE_ENV === \"development\" && !isSSR) {\r\n    console.warn(\r\n      \"[vue-router]: Data Loader is experimental and subject to breaking changes in the future.\"\r\n    );\r\n  }\r\n  router[LOADER_ENTRIES_KEY] = /* @__PURE__ */ new WeakMap();\r\n  router[APP_KEY] = app;\r\n  router[IS_SSR_KEY] = !!isSSR;\r\n  const removeLoaderGuard = router.beforeEach((to) => {\r\n    if (router[PENDING_LOCATION_KEY]) {\r\n      router[PENDING_LOCATION_KEY].meta[ABORT_CONTROLLER_KEY]?.abort();\r\n    }\r\n    router[PENDING_LOCATION_KEY] = to;\r\n    to.meta[LOADER_SET_KEY] = /* @__PURE__ */ new Set();\r\n    to.meta[ABORT_CONTROLLER_KEY] = new AbortController();\r\n    to.meta[NAVIGATION_RESULTS_KEY] = [];\r\n    const lazyLoadingPromises = [];\r\n    for (const record of to.matched) {\r\n      if (!record.meta[LOADER_SET_KEY]) {\r\n        record.meta[LOADER_SET_KEY] = new Set(record.meta.loaders || []);\r\n        for (const componentName in record.components) {\r\n          const component = record.components[componentName];\r\n          const promise = (isAsyncModule(component) ? component() : (\r\n            // we also support __loaders exported as an option to get around some temporary limitations\r\n            Promise.resolve(\r\n              component\r\n            )\r\n          )).then((viewModule) => {\r\n            if (typeof viewModule === \"function\") return;\r\n            for (const exportName in viewModule) {\r\n              const exportValue = viewModule[exportName];\r\n              if (isDataLoader(exportValue)) {\r\n                record.meta[LOADER_SET_KEY].add(exportValue);\r\n              }\r\n            }\r\n            if (Array.isArray(viewModule.__loaders)) {\r\n              for (const loader of viewModule.__loaders) {\r\n                if (isDataLoader(loader)) {\r\n                  record.meta[LOADER_SET_KEY].add(loader);\r\n                }\r\n              }\r\n            }\r\n          });\r\n          lazyLoadingPromises.push(promise);\r\n        }\r\n      }\r\n    }\r\n    return Promise.all(lazyLoadingPromises).then(() => {\r\n      for (const record of to.matched) {\r\n        for (const loader of record.meta[LOADER_SET_KEY]) {\r\n          to.meta[LOADER_SET_KEY].add(loader);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  const removeDataLoaderGuard = router.beforeResolve((to, from) => {\r\n    const loaders = Array.from(to.meta[LOADER_SET_KEY]);\r\n    setCurrentContext([]);\r\n    return Promise.all(\r\n      loaders.map((loader) => {\r\n        const { server, lazy, errors } = loader._.options;\r\n        if (!server && isSSR) {\r\n          return;\r\n        }\r\n        const ret = effect.run(\r\n          () => app.runWithContext(\r\n            () => loader._.load(to, router, from)\r\n          )\r\n        );\r\n        return !isSSR && toLazyValue(lazy, to, from) ? void 0 : (\r\n          // return the non-lazy loader to commit changes after all loaders are done\r\n          ret.catch((reason) => {\r\n            if (!errors) throw reason;\r\n            if (errors === true) {\r\n              if (Array.isArray(globalErrors) ? globalErrors.some((Err) => reason instanceof Err) : globalErrors(reason))\r\n                return;\r\n            } else if (\r\n              // use local error option if it exists first and then the global one\r\n              Array.isArray(errors) ? errors.some((Err) => reason instanceof Err) : errors(reason)\r\n            ) {\r\n              return;\r\n            }\r\n            throw reason;\r\n          })\r\n        );\r\n      })\r\n    ).then(() => {\r\n      if (to.meta[NAVIGATION_RESULTS_KEY].length) {\r\n        return selectNavigationResult(to.meta[NAVIGATION_RESULTS_KEY]);\r\n      }\r\n    }).catch(\r\n      (error) => error instanceof NavigationResult ? error.value : (\r\n        // let the error propagate to router.onError()\r\n        // we use never because the rejection means we never resolve a value and using anything else\r\n        // will not be valid from the navigation guard's perspective\r\n        Promise.reject(error)\r\n      )\r\n    ).finally(() => {\r\n      setCurrentContext([]);\r\n    });\r\n  });\r\n  const removeAfterEach = router.afterEach((to, from, failure) => {\r\n    if (failure) {\r\n      to.meta[ABORT_CONTROLLER_KEY]?.abort(failure);\r\n      if (\r\n        // NOTE: using a smaller version to cutoff some bytes\r\n        isNavigationFailure(\r\n          failure,\r\n          16\r\n          /* NavigationFailureType.duplicated */\r\n        )\r\n      ) {\r\n        for (const loader of to.meta[LOADER_SET_KEY]) {\r\n          const entry = loader._.getEntry(router);\r\n          entry.resetPending();\r\n        }\r\n      }\r\n    } else {\r\n      for (const loader of to.meta[LOADER_SET_KEY]) {\r\n        const { commit, lazy } = loader._.options;\r\n        if (commit === \"after-load\") {\r\n          const entry = loader._.getEntry(router);\r\n          if (entry && (!toLazyValue(lazy, to, from) || !entry.isLoading.value)) {\r\n            entry.commit(to);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (router[PENDING_LOCATION_KEY] === to) {\r\n      router[PENDING_LOCATION_KEY] = null;\r\n    }\r\n  });\r\n  const removeOnError = router.onError((error, to) => {\r\n    to.meta[ABORT_CONTROLLER_KEY]?.abort(error);\r\n    if (router[PENDING_LOCATION_KEY] === to) {\r\n      router[PENDING_LOCATION_KEY] = null;\r\n    }\r\n  });\r\n  return () => {\r\n    delete router[LOADER_ENTRIES_KEY];\r\n    delete router[APP_KEY];\r\n    removeLoaderGuard();\r\n    removeDataLoaderGuard();\r\n    removeAfterEach();\r\n    removeOnError();\r\n  };\r\n}\r\nfunction isAsyncModule(asyncMod) {\r\n  return typeof asyncMod === \"function\" && // vue functional components\r\n  !(\"displayName\" in asyncMod) && !(\"props\" in asyncMod) && !(\"emits\" in asyncMod) && !(\"__vccOpts\" in asyncMod);\r\n}\r\nvar NavigationResult = class {\r\n  constructor(value) {\r\n    this.value = value;\r\n  }\r\n};\r\nfunction DataLoaderPlugin(app, options) {\r\n  const effect = effectScope(true);\r\n  const removeGuards = setupLoaderGuard(assign({ app, effect }, options));\r\n  const { unmount } = app;\r\n  app.unmount = () => {\r\n    effect.stop();\r\n    removeGuards();\r\n    unmount.call(app);\r\n  };\r\n}\r\n\r\n// src/runtime.ts\r\nvar _definePage = (route) => route;\r\nvar definePage = (route) => route;\r\nfunction _mergeRouteRecord(main, ...routeRecords) {\r\n  return routeRecords.reduce((acc, routeRecord) => {\r\n    const meta = Object.assign({}, acc.meta, routeRecord.meta);\r\n    const alias = [].concat(\r\n      acc.alias || [],\r\n      routeRecord.alias || []\r\n    );\r\n    Object.assign(acc, routeRecord);\r\n    acc.meta = meta;\r\n    acc.alias = alias;\r\n    return acc;\r\n  }, main);\r\n}\r\nexport {\r\n  ABORT_CONTROLLER_KEY,\r\n  APP_KEY,\r\n  DataLoaderPlugin,\r\n  IS_SSR_KEY,\r\n  IS_USE_DATA_LOADER_KEY,\r\n  LOADER_ENTRIES_KEY,\r\n  LOADER_SET_KEY,\r\n  NAVIGATION_RESULTS_KEY,\r\n  NavigationResult,\r\n  PENDING_LOCATION_KEY,\r\n  STAGED_NO_VALUE,\r\n  _definePage,\r\n  _mergeRouteRecord,\r\n  assign,\r\n  currentContext,\r\n  definePage,\r\n  getCurrentContext,\r\n  isSubsetOf,\r\n  setCurrentContext,\r\n  toLazyValue,\r\n  trackRoute,\r\n  withLoaderContext\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
